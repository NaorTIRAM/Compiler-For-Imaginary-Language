Terminals unused in grammar

   _orop
   _andop
   VAR
   DECLL


State 64 conflicts: 1 shift/reduce


Grammar

    0 $accept: PROGRAM $end

    1 PROGRAM: program _id start DECLARATIONS STMTLIST end
    2        | error '\n'

    3 DECLARATIONS: decl DECLARLIST CDECL
    4             | /* empty */

    5 DECLARLIST: DECLARLIST DECL
    6           | DECL

    7 $@1: /* empty */

    8 DECL: TYPE $@1 ':' LIST

    9 LIST: _id ',' LIST
   10     | _id ';'

   11 TYPE: intt
   12     | real
   13     | string

   14 CDECL: final TYPE _id _assignop _num ';' CDECL
   15      | final TYPE _id _assignop _sentence ';' CDECL
   16      | /* empty */

   17 STMTLIST: STMTLIST STMT
   18         | /* empty */

   19 STMT: ASSIGNMENT_STMT
   20     | _id _assignop _sentence ';'
   21     | CONTROL_STMT
   22     | IN_STMT
   23     | OUT_STMT
   24     | STMT_BLOCK

   25 OUT_STMT: out '(' EXPRESSION ')' ';'
   26         | out '(' _sentence ')' ';'

   27 IN_STMT: in '(' _id ')' ';'

   28 ASSIGNMENT_STMT: _id _assignop EXPRESSION ';'

   29 $@2: /* empty */

   30 $@3: /* empty */

   31 CONTROL_STMT: _if '(' BOOLEXPR ')' THENN $@2 STMT _else $@3 STMT

   32 $@4: /* empty */

   33 $@5: /* empty */

   34 CONTROL_STMT: _while $@4 '(' BOOLEXPR ')' $@5 STMT_BLOCK

   35 $@6: /* empty */

   36 CONTROL_STMT: _foreach _id _assignop _num till _num $@6 _with STEP STMT

   37 $@7: /* empty */

   38 CONTROL_STMT: _foreach _id _assignop _num till _id $@7 _with STEP STMT

   39 $@8: /* empty */

   40 CONTROL_STMT: DO $@8 STMT_BLOCK till '(' BOOLEXPR ')'
   41             | SWITCH

   42 STMT_BLOCK: '{' STMTLIST '}'

   43 SWITCH: SWITCHH '(' IDD ')' '{' CASES '}'

   44 IDD: _id
   45    | _num

   46 $@9: /* empty */

   47 $@10: /* empty */

   48 CASES: CASE _num ':' $@9 STMTLIST BREAK ';' $@10 CASES

   49 $@11: /* empty */

   50 CASES: DEFAULT ':' $@11 STMTLIST

   51 STEP: _id _assignop _id _addop _num
   52     | _id _assignop _id _mulop _num

   53 BOOLEXPR: BOOLEXPR _andorop BOOLFACTOR
   54         | BOOLFACTOR _andorop BOOLFACTOR
   55         | BOOLFACTOR

   56 $@12: /* empty */

   57 BOOLFACTOR: '!' $@12 '(' BOOLFACTOR ')'
   58           | EXPRESSION relop EXPRESSION

   59 EXPRESSION: EXPRESSION _addop TERM
   60           | TERM

   61 TERM: TERM _mulop FACTOR
   62     | FACTOR

   63 FACTOR: '(' EXPRESSION ')'
   64       | _id
   65       | _num


Terminals, with rules where they appear

$end (0) 0
'\n' (10) 2
'!' (33) 57
'(' (40) 25 26 27 31 34 40 43 57 63
')' (41) 25 26 27 31 34 40 43 57 63
',' (44) 9
':' (58) 8 48 50
';' (59) 10 14 15 20 25 26 27 28 48
'{' (123) 42 43
'}' (125) 42 43
error (256) 2
relop (258) 58
_addop (259) 51 59
_mulop (260) 52 61
_assignop (261) 14 15 20 28 36 38 51 52
_orop (262)
_andop (263)
_andorop (264) 53 54
_num (265) 14 36 38 45 48 51 52 65
_id (266) 1 9 10 14 15 20 27 28 36 38 44 51 52 64
_sentence (267) 15 20 26
_foreach (268) 36 38
end (269) 1
_else (270) 31
till (271) 36 38 40
out (272) 25 26
intt (273) 11
VAR (274)
DEFAULT (275) 50
DECLL (276)
_if (277) 31
program (278) 1
in (279) 27
DO (280) 40
THENN (281) 31
CASE (282) 48
BREAK (283) 48
start (284) 1
real (285) 12
SWITCHH (286) 43
final (287) 14 15
_while (288) 34
decl (289) 3
string (290) 13
_with (291) 36 38


Nonterminals, with rules where they appear

$accept (46)
    on left: 0
PROGRAM (47)
    on left: 1 2, on right: 0
DECLARATIONS (48)
    on left: 3 4, on right: 1
DECLARLIST (49)
    on left: 5 6, on right: 3 5
DECL (50)
    on left: 8, on right: 5 6
$@1 (51)
    on left: 7, on right: 8
LIST (52)
    on left: 9 10, on right: 8 9
TYPE (53)
    on left: 11 12 13, on right: 8 14 15
CDECL (54)
    on left: 14 15 16, on right: 3 14 15
STMTLIST (55)
    on left: 17 18, on right: 1 17 42 48 50
STMT (56)
    on left: 19 20 21 22 23 24, on right: 17 31 36 38
OUT_STMT (57)
    on left: 25 26, on right: 23
IN_STMT (58)
    on left: 27, on right: 22
ASSIGNMENT_STMT (59)
    on left: 28, on right: 19
CONTROL_STMT (60)
    on left: 31 34 36 38 40 41, on right: 21
$@2 (61)
    on left: 29, on right: 31
$@3 (62)
    on left: 30, on right: 31
$@4 (63)
    on left: 32, on right: 34
$@5 (64)
    on left: 33, on right: 34
$@6 (65)
    on left: 35, on right: 36
$@7 (66)
    on left: 37, on right: 38
$@8 (67)
    on left: 39, on right: 40
STMT_BLOCK (68)
    on left: 42, on right: 24 34 40
SWITCH (69)
    on left: 43, on right: 41
IDD (70)
    on left: 44 45, on right: 43
CASES (71)
    on left: 48 50, on right: 43 48
$@9 (72)
    on left: 46, on right: 48
$@10 (73)
    on left: 47, on right: 48
$@11 (74)
    on left: 49, on right: 50
STEP (75)
    on left: 51 52, on right: 36 38
BOOLEXPR (76)
    on left: 53 54 55, on right: 31 34 40 53
BOOLFACTOR (77)
    on left: 57 58, on right: 53 54 55 57
$@12 (78)
    on left: 56, on right: 57
EXPRESSION (79)
    on left: 59 60, on right: 25 28 58 59 63
TERM (80)
    on left: 61 62, on right: 59 60 61
FACTOR (81)
    on left: 63 64 65, on right: 61 62


state 0

    0 $accept: . PROGRAM $end

    error    shift, and go to state 1
    program  shift, and go to state 2

    PROGRAM  go to state 3


state 1

    2 PROGRAM: error . '\n'

    '\n'  shift, and go to state 4


state 2

    1 PROGRAM: program . _id start DECLARATIONS STMTLIST end

    _id  shift, and go to state 5


state 3

    0 $accept: PROGRAM . $end

    $end  shift, and go to state 6


state 4

    2 PROGRAM: error '\n' .

    $default  reduce using rule 2 (PROGRAM)


state 5

    1 PROGRAM: program _id . start DECLARATIONS STMTLIST end

    start  shift, and go to state 7


state 6

    0 $accept: PROGRAM $end .

    $default  accept


state 7

    1 PROGRAM: program _id start . DECLARATIONS STMTLIST end

    decl  shift, and go to state 8

    $default  reduce using rule 4 (DECLARATIONS)

    DECLARATIONS  go to state 9


state 8

    3 DECLARATIONS: decl . DECLARLIST CDECL

    intt    shift, and go to state 10
    real    shift, and go to state 11
    string  shift, and go to state 12

    DECLARLIST  go to state 13
    DECL        go to state 14
    TYPE        go to state 15


state 9

    1 PROGRAM: program _id start DECLARATIONS . STMTLIST end

    $default  reduce using rule 18 (STMTLIST)

    STMTLIST  go to state 16


state 10

   11 TYPE: intt .

    $default  reduce using rule 11 (TYPE)


state 11

   12 TYPE: real .

    $default  reduce using rule 12 (TYPE)


state 12

   13 TYPE: string .

    $default  reduce using rule 13 (TYPE)


state 13

    3 DECLARATIONS: decl DECLARLIST . CDECL
    5 DECLARLIST: DECLARLIST . DECL

    intt    shift, and go to state 10
    real    shift, and go to state 11
    final   shift, and go to state 17
    string  shift, and go to state 12

    $default  reduce using rule 16 (CDECL)

    DECL   go to state 18
    TYPE   go to state 15
    CDECL  go to state 19


state 14

    6 DECLARLIST: DECL .

    $default  reduce using rule 6 (DECLARLIST)


state 15

    8 DECL: TYPE . $@1 ':' LIST

    $default  reduce using rule 7 ($@1)

    $@1  go to state 20


state 16

    1 PROGRAM: program _id start DECLARATIONS STMTLIST . end
   17 STMTLIST: STMTLIST . STMT

    _id       shift, and go to state 21
    _foreach  shift, and go to state 22
    end       shift, and go to state 23
    out       shift, and go to state 24
    _if       shift, and go to state 25
    in        shift, and go to state 26
    DO        shift, and go to state 27
    SWITCHH   shift, and go to state 28
    _while    shift, and go to state 29
    '{'       shift, and go to state 30

    STMT             go to state 31
    OUT_STMT         go to state 32
    IN_STMT          go to state 33
    ASSIGNMENT_STMT  go to state 34
    CONTROL_STMT     go to state 35
    STMT_BLOCK       go to state 36
    SWITCH           go to state 37


state 17

   14 CDECL: final . TYPE _id _assignop _num ';' CDECL
   15      | final . TYPE _id _assignop _sentence ';' CDECL

    intt    shift, and go to state 10
    real    shift, and go to state 11
    string  shift, and go to state 12

    TYPE  go to state 38


state 18

    5 DECLARLIST: DECLARLIST DECL .

    $default  reduce using rule 5 (DECLARLIST)


state 19

    3 DECLARATIONS: decl DECLARLIST CDECL .

    $default  reduce using rule 3 (DECLARATIONS)


state 20

    8 DECL: TYPE $@1 . ':' LIST

    ':'  shift, and go to state 39


state 21

   20 STMT: _id . _assignop _sentence ';'
   28 ASSIGNMENT_STMT: _id . _assignop EXPRESSION ';'

    _assignop  shift, and go to state 40


state 22

   36 CONTROL_STMT: _foreach . _id _assignop _num till _num $@6 _with STEP STMT
   38             | _foreach . _id _assignop _num till _id $@7 _with STEP STMT

    _id  shift, and go to state 41


state 23

    1 PROGRAM: program _id start DECLARATIONS STMTLIST end .

    $default  reduce using rule 1 (PROGRAM)


state 24

   25 OUT_STMT: out . '(' EXPRESSION ')' ';'
   26         | out . '(' _sentence ')' ';'

    '('  shift, and go to state 42


state 25

   31 CONTROL_STMT: _if . '(' BOOLEXPR ')' THENN $@2 STMT _else $@3 STMT

    '('  shift, and go to state 43


state 26

   27 IN_STMT: in . '(' _id ')' ';'

    '('  shift, and go to state 44


state 27

   40 CONTROL_STMT: DO . $@8 STMT_BLOCK till '(' BOOLEXPR ')'

    $default  reduce using rule 39 ($@8)

    $@8  go to state 45


state 28

   43 SWITCH: SWITCHH . '(' IDD ')' '{' CASES '}'

    '('  shift, and go to state 46


state 29

   34 CONTROL_STMT: _while . $@4 '(' BOOLEXPR ')' $@5 STMT_BLOCK

    $default  reduce using rule 32 ($@4)

    $@4  go to state 47


state 30

   42 STMT_BLOCK: '{' . STMTLIST '}'

    $default  reduce using rule 18 (STMTLIST)

    STMTLIST  go to state 48


state 31

   17 STMTLIST: STMTLIST STMT .

    $default  reduce using rule 17 (STMTLIST)


state 32

   23 STMT: OUT_STMT .

    $default  reduce using rule 23 (STMT)


state 33

   22 STMT: IN_STMT .

    $default  reduce using rule 22 (STMT)


state 34

   19 STMT: ASSIGNMENT_STMT .

    $default  reduce using rule 19 (STMT)


state 35

   21 STMT: CONTROL_STMT .

    $default  reduce using rule 21 (STMT)


state 36

   24 STMT: STMT_BLOCK .

    $default  reduce using rule 24 (STMT)


state 37

   41 CONTROL_STMT: SWITCH .

    $default  reduce using rule 41 (CONTROL_STMT)


state 38

   14 CDECL: final TYPE . _id _assignop _num ';' CDECL
   15      | final TYPE . _id _assignop _sentence ';' CDECL

    _id  shift, and go to state 49


state 39

    8 DECL: TYPE $@1 ':' . LIST

    _id  shift, and go to state 50

    LIST  go to state 51


state 40

   20 STMT: _id _assignop . _sentence ';'
   28 ASSIGNMENT_STMT: _id _assignop . EXPRESSION ';'

    _num       shift, and go to state 52
    _id        shift, and go to state 53
    _sentence  shift, and go to state 54
    '('        shift, and go to state 55

    EXPRESSION  go to state 56
    TERM        go to state 57
    FACTOR      go to state 58


state 41

   36 CONTROL_STMT: _foreach _id . _assignop _num till _num $@6 _with STEP STMT
   38             | _foreach _id . _assignop _num till _id $@7 _with STEP STMT

    _assignop  shift, and go to state 59


state 42

   25 OUT_STMT: out '(' . EXPRESSION ')' ';'
   26         | out '(' . _sentence ')' ';'

    _num       shift, and go to state 52
    _id        shift, and go to state 53
    _sentence  shift, and go to state 60
    '('        shift, and go to state 55

    EXPRESSION  go to state 61
    TERM        go to state 57
    FACTOR      go to state 58


state 43

   31 CONTROL_STMT: _if '(' . BOOLEXPR ')' THENN $@2 STMT _else $@3 STMT

    _num  shift, and go to state 52
    _id   shift, and go to state 53
    '('   shift, and go to state 55
    '!'   shift, and go to state 62

    BOOLEXPR    go to state 63
    BOOLFACTOR  go to state 64
    EXPRESSION  go to state 65
    TERM        go to state 57
    FACTOR      go to state 58


state 44

   27 IN_STMT: in '(' . _id ')' ';'

    _id  shift, and go to state 66


state 45

   40 CONTROL_STMT: DO $@8 . STMT_BLOCK till '(' BOOLEXPR ')'

    '{'  shift, and go to state 30

    STMT_BLOCK  go to state 67


state 46

   43 SWITCH: SWITCHH '(' . IDD ')' '{' CASES '}'

    _num  shift, and go to state 68
    _id   shift, and go to state 69

    IDD  go to state 70


state 47

   34 CONTROL_STMT: _while $@4 . '(' BOOLEXPR ')' $@5 STMT_BLOCK

    '('  shift, and go to state 71


state 48

   17 STMTLIST: STMTLIST . STMT
   42 STMT_BLOCK: '{' STMTLIST . '}'

    _id       shift, and go to state 21
    _foreach  shift, and go to state 22
    out       shift, and go to state 24
    _if       shift, and go to state 25
    in        shift, and go to state 26
    DO        shift, and go to state 27
    SWITCHH   shift, and go to state 28
    _while    shift, and go to state 29
    '{'       shift, and go to state 30
    '}'       shift, and go to state 72

    STMT             go to state 31
    OUT_STMT         go to state 32
    IN_STMT          go to state 33
    ASSIGNMENT_STMT  go to state 34
    CONTROL_STMT     go to state 35
    STMT_BLOCK       go to state 36
    SWITCH           go to state 37


state 49

   14 CDECL: final TYPE _id . _assignop _num ';' CDECL
   15      | final TYPE _id . _assignop _sentence ';' CDECL

    _assignop  shift, and go to state 73


state 50

    9 LIST: _id . ',' LIST
   10     | _id . ';'

    ','  shift, and go to state 74
    ';'  shift, and go to state 75


state 51

    8 DECL: TYPE $@1 ':' LIST .

    $default  reduce using rule 8 (DECL)


state 52

   65 FACTOR: _num .

    $default  reduce using rule 65 (FACTOR)


state 53

   64 FACTOR: _id .

    $default  reduce using rule 64 (FACTOR)


state 54

   20 STMT: _id _assignop _sentence . ';'

    ';'  shift, and go to state 76


state 55

   63 FACTOR: '(' . EXPRESSION ')'

    _num  shift, and go to state 52
    _id   shift, and go to state 53
    '('   shift, and go to state 55

    EXPRESSION  go to state 77
    TERM        go to state 57
    FACTOR      go to state 58


state 56

   28 ASSIGNMENT_STMT: _id _assignop EXPRESSION . ';'
   59 EXPRESSION: EXPRESSION . _addop TERM

    _addop  shift, and go to state 78
    ';'     shift, and go to state 79


state 57

   60 EXPRESSION: TERM .
   61 TERM: TERM . _mulop FACTOR

    _mulop  shift, and go to state 80

    $default  reduce using rule 60 (EXPRESSION)


state 58

   62 TERM: FACTOR .

    $default  reduce using rule 62 (TERM)


state 59

   36 CONTROL_STMT: _foreach _id _assignop . _num till _num $@6 _with STEP STMT
   38             | _foreach _id _assignop . _num till _id $@7 _with STEP STMT

    _num  shift, and go to state 81


state 60

   26 OUT_STMT: out '(' _sentence . ')' ';'

    ')'  shift, and go to state 82


state 61

   25 OUT_STMT: out '(' EXPRESSION . ')' ';'
   59 EXPRESSION: EXPRESSION . _addop TERM

    _addop  shift, and go to state 78
    ')'     shift, and go to state 83


state 62

   57 BOOLFACTOR: '!' . $@12 '(' BOOLFACTOR ')'

    $default  reduce using rule 56 ($@12)

    $@12  go to state 84


state 63

   31 CONTROL_STMT: _if '(' BOOLEXPR . ')' THENN $@2 STMT _else $@3 STMT
   53 BOOLEXPR: BOOLEXPR . _andorop BOOLFACTOR

    _andorop  shift, and go to state 85
    ')'       shift, and go to state 86


state 64

   54 BOOLEXPR: BOOLFACTOR . _andorop BOOLFACTOR
   55         | BOOLFACTOR .

    _andorop  shift, and go to state 87

    _andorop  [reduce using rule 55 (BOOLEXPR)]
    $default  reduce using rule 55 (BOOLEXPR)


state 65

   58 BOOLFACTOR: EXPRESSION . relop EXPRESSION
   59 EXPRESSION: EXPRESSION . _addop TERM

    relop   shift, and go to state 88
    _addop  shift, and go to state 78


state 66

   27 IN_STMT: in '(' _id . ')' ';'

    ')'  shift, and go to state 89


state 67

   40 CONTROL_STMT: DO $@8 STMT_BLOCK . till '(' BOOLEXPR ')'

    till  shift, and go to state 90


state 68

   45 IDD: _num .

    $default  reduce using rule 45 (IDD)


state 69

   44 IDD: _id .

    $default  reduce using rule 44 (IDD)


state 70

   43 SWITCH: SWITCHH '(' IDD . ')' '{' CASES '}'

    ')'  shift, and go to state 91


state 71

   34 CONTROL_STMT: _while $@4 '(' . BOOLEXPR ')' $@5 STMT_BLOCK

    _num  shift, and go to state 52
    _id   shift, and go to state 53
    '('   shift, and go to state 55
    '!'   shift, and go to state 62

    BOOLEXPR    go to state 92
    BOOLFACTOR  go to state 64
    EXPRESSION  go to state 65
    TERM        go to state 57
    FACTOR      go to state 58


state 72

   42 STMT_BLOCK: '{' STMTLIST '}' .

    $default  reduce using rule 42 (STMT_BLOCK)


state 73

   14 CDECL: final TYPE _id _assignop . _num ';' CDECL
   15      | final TYPE _id _assignop . _sentence ';' CDECL

    _num       shift, and go to state 93
    _sentence  shift, and go to state 94


state 74

    9 LIST: _id ',' . LIST

    _id  shift, and go to state 50

    LIST  go to state 95


state 75

   10 LIST: _id ';' .

    $default  reduce using rule 10 (LIST)


state 76

   20 STMT: _id _assignop _sentence ';' .

    $default  reduce using rule 20 (STMT)


state 77

   59 EXPRESSION: EXPRESSION . _addop TERM
   63 FACTOR: '(' EXPRESSION . ')'

    _addop  shift, and go to state 78
    ')'     shift, and go to state 96


state 78

   59 EXPRESSION: EXPRESSION _addop . TERM

    _num  shift, and go to state 52
    _id   shift, and go to state 53
    '('   shift, and go to state 55

    TERM    go to state 97
    FACTOR  go to state 58


state 79

   28 ASSIGNMENT_STMT: _id _assignop EXPRESSION ';' .

    $default  reduce using rule 28 (ASSIGNMENT_STMT)


state 80

   61 TERM: TERM _mulop . FACTOR

    _num  shift, and go to state 52
    _id   shift, and go to state 53
    '('   shift, and go to state 55

    FACTOR  go to state 98


state 81

   36 CONTROL_STMT: _foreach _id _assignop _num . till _num $@6 _with STEP STMT
   38             | _foreach _id _assignop _num . till _id $@7 _with STEP STMT

    till  shift, and go to state 99


state 82

   26 OUT_STMT: out '(' _sentence ')' . ';'

    ';'  shift, and go to state 100


state 83

   25 OUT_STMT: out '(' EXPRESSION ')' . ';'

    ';'  shift, and go to state 101


state 84

   57 BOOLFACTOR: '!' $@12 . '(' BOOLFACTOR ')'

    '('  shift, and go to state 102


state 85

   53 BOOLEXPR: BOOLEXPR _andorop . BOOLFACTOR

    _num  shift, and go to state 52
    _id   shift, and go to state 53
    '('   shift, and go to state 55
    '!'   shift, and go to state 62

    BOOLFACTOR  go to state 103
    EXPRESSION  go to state 65
    TERM        go to state 57
    FACTOR      go to state 58


state 86

   31 CONTROL_STMT: _if '(' BOOLEXPR ')' . THENN $@2 STMT _else $@3 STMT

    THENN  shift, and go to state 104


state 87

   54 BOOLEXPR: BOOLFACTOR _andorop . BOOLFACTOR

    _num  shift, and go to state 52
    _id   shift, and go to state 53
    '('   shift, and go to state 55
    '!'   shift, and go to state 62

    BOOLFACTOR  go to state 105
    EXPRESSION  go to state 65
    TERM        go to state 57
    FACTOR      go to state 58


state 88

   58 BOOLFACTOR: EXPRESSION relop . EXPRESSION

    _num  shift, and go to state 52
    _id   shift, and go to state 53
    '('   shift, and go to state 55

    EXPRESSION  go to state 106
    TERM        go to state 57
    FACTOR      go to state 58


state 89

   27 IN_STMT: in '(' _id ')' . ';'

    ';'  shift, and go to state 107


state 90

   40 CONTROL_STMT: DO $@8 STMT_BLOCK till . '(' BOOLEXPR ')'

    '('  shift, and go to state 108


state 91

   43 SWITCH: SWITCHH '(' IDD ')' . '{' CASES '}'

    '{'  shift, and go to state 109


state 92

   34 CONTROL_STMT: _while $@4 '(' BOOLEXPR . ')' $@5 STMT_BLOCK
   53 BOOLEXPR: BOOLEXPR . _andorop BOOLFACTOR

    _andorop  shift, and go to state 85
    ')'       shift, and go to state 110


state 93

   14 CDECL: final TYPE _id _assignop _num . ';' CDECL

    ';'  shift, and go to state 111


state 94

   15 CDECL: final TYPE _id _assignop _sentence . ';' CDECL

    ';'  shift, and go to state 112


state 95

    9 LIST: _id ',' LIST .

    $default  reduce using rule 9 (LIST)


state 96

   63 FACTOR: '(' EXPRESSION ')' .

    $default  reduce using rule 63 (FACTOR)


state 97

   59 EXPRESSION: EXPRESSION _addop TERM .
   61 TERM: TERM . _mulop FACTOR

    _mulop  shift, and go to state 80

    $default  reduce using rule 59 (EXPRESSION)


state 98

   61 TERM: TERM _mulop FACTOR .

    $default  reduce using rule 61 (TERM)


state 99

   36 CONTROL_STMT: _foreach _id _assignop _num till . _num $@6 _with STEP STMT
   38             | _foreach _id _assignop _num till . _id $@7 _with STEP STMT

    _num  shift, and go to state 113
    _id   shift, and go to state 114


state 100

   26 OUT_STMT: out '(' _sentence ')' ';' .

    $default  reduce using rule 26 (OUT_STMT)


state 101

   25 OUT_STMT: out '(' EXPRESSION ')' ';' .

    $default  reduce using rule 25 (OUT_STMT)


state 102

   57 BOOLFACTOR: '!' $@12 '(' . BOOLFACTOR ')'

    _num  shift, and go to state 52
    _id   shift, and go to state 53
    '('   shift, and go to state 55
    '!'   shift, and go to state 62

    BOOLFACTOR  go to state 115
    EXPRESSION  go to state 65
    TERM        go to state 57
    FACTOR      go to state 58


state 103

   53 BOOLEXPR: BOOLEXPR _andorop BOOLFACTOR .

    $default  reduce using rule 53 (BOOLEXPR)


state 104

   31 CONTROL_STMT: _if '(' BOOLEXPR ')' THENN . $@2 STMT _else $@3 STMT

    $default  reduce using rule 29 ($@2)

    $@2  go to state 116


state 105

   54 BOOLEXPR: BOOLFACTOR _andorop BOOLFACTOR .

    $default  reduce using rule 54 (BOOLEXPR)


state 106

   58 BOOLFACTOR: EXPRESSION relop EXPRESSION .
   59 EXPRESSION: EXPRESSION . _addop TERM

    _addop  shift, and go to state 78

    $default  reduce using rule 58 (BOOLFACTOR)


state 107

   27 IN_STMT: in '(' _id ')' ';' .

    $default  reduce using rule 27 (IN_STMT)


state 108

   40 CONTROL_STMT: DO $@8 STMT_BLOCK till '(' . BOOLEXPR ')'

    _num  shift, and go to state 52
    _id   shift, and go to state 53
    '('   shift, and go to state 55
    '!'   shift, and go to state 62

    BOOLEXPR    go to state 117
    BOOLFACTOR  go to state 64
    EXPRESSION  go to state 65
    TERM        go to state 57
    FACTOR      go to state 58


state 109

   43 SWITCH: SWITCHH '(' IDD ')' '{' . CASES '}'

    DEFAULT  shift, and go to state 118
    CASE     shift, and go to state 119

    CASES  go to state 120


state 110

   34 CONTROL_STMT: _while $@4 '(' BOOLEXPR ')' . $@5 STMT_BLOCK

    $default  reduce using rule 33 ($@5)

    $@5  go to state 121


state 111

   14 CDECL: final TYPE _id _assignop _num ';' . CDECL

    final  shift, and go to state 17

    $default  reduce using rule 16 (CDECL)

    CDECL  go to state 122


state 112

   15 CDECL: final TYPE _id _assignop _sentence ';' . CDECL

    final  shift, and go to state 17

    $default  reduce using rule 16 (CDECL)

    CDECL  go to state 123


state 113

   36 CONTROL_STMT: _foreach _id _assignop _num till _num . $@6 _with STEP STMT

    $default  reduce using rule 35 ($@6)

    $@6  go to state 124


state 114

   38 CONTROL_STMT: _foreach _id _assignop _num till _id . $@7 _with STEP STMT

    $default  reduce using rule 37 ($@7)

    $@7  go to state 125


state 115

   57 BOOLFACTOR: '!' $@12 '(' BOOLFACTOR . ')'

    ')'  shift, and go to state 126


state 116

   31 CONTROL_STMT: _if '(' BOOLEXPR ')' THENN $@2 . STMT _else $@3 STMT

    _id       shift, and go to state 21
    _foreach  shift, and go to state 22
    out       shift, and go to state 24
    _if       shift, and go to state 25
    in        shift, and go to state 26
    DO        shift, and go to state 27
    SWITCHH   shift, and go to state 28
    _while    shift, and go to state 29
    '{'       shift, and go to state 30

    STMT             go to state 127
    OUT_STMT         go to state 32
    IN_STMT          go to state 33
    ASSIGNMENT_STMT  go to state 34
    CONTROL_STMT     go to state 35
    STMT_BLOCK       go to state 36
    SWITCH           go to state 37


state 117

   40 CONTROL_STMT: DO $@8 STMT_BLOCK till '(' BOOLEXPR . ')'
   53 BOOLEXPR: BOOLEXPR . _andorop BOOLFACTOR

    _andorop  shift, and go to state 85
    ')'       shift, and go to state 128


state 118

   50 CASES: DEFAULT . ':' $@11 STMTLIST

    ':'  shift, and go to state 129


state 119

   48 CASES: CASE . _num ':' $@9 STMTLIST BREAK ';' $@10 CASES

    _num  shift, and go to state 130


state 120

   43 SWITCH: SWITCHH '(' IDD ')' '{' CASES . '}'

    '}'  shift, and go to state 131


state 121

   34 CONTROL_STMT: _while $@4 '(' BOOLEXPR ')' $@5 . STMT_BLOCK

    '{'  shift, and go to state 30

    STMT_BLOCK  go to state 132


state 122

   14 CDECL: final TYPE _id _assignop _num ';' CDECL .

    $default  reduce using rule 14 (CDECL)


state 123

   15 CDECL: final TYPE _id _assignop _sentence ';' CDECL .

    $default  reduce using rule 15 (CDECL)


state 124

   36 CONTROL_STMT: _foreach _id _assignop _num till _num $@6 . _with STEP STMT

    _with  shift, and go to state 133


state 125

   38 CONTROL_STMT: _foreach _id _assignop _num till _id $@7 . _with STEP STMT

    _with  shift, and go to state 134


state 126

   57 BOOLFACTOR: '!' $@12 '(' BOOLFACTOR ')' .

    $default  reduce using rule 57 (BOOLFACTOR)


state 127

   31 CONTROL_STMT: _if '(' BOOLEXPR ')' THENN $@2 STMT . _else $@3 STMT

    _else  shift, and go to state 135


state 128

   40 CONTROL_STMT: DO $@8 STMT_BLOCK till '(' BOOLEXPR ')' .

    $default  reduce using rule 40 (CONTROL_STMT)


state 129

   50 CASES: DEFAULT ':' . $@11 STMTLIST

    $default  reduce using rule 49 ($@11)

    $@11  go to state 136


state 130

   48 CASES: CASE _num . ':' $@9 STMTLIST BREAK ';' $@10 CASES

    ':'  shift, and go to state 137


state 131

   43 SWITCH: SWITCHH '(' IDD ')' '{' CASES '}' .

    $default  reduce using rule 43 (SWITCH)


state 132

   34 CONTROL_STMT: _while $@4 '(' BOOLEXPR ')' $@5 STMT_BLOCK .

    $default  reduce using rule 34 (CONTROL_STMT)


state 133

   36 CONTROL_STMT: _foreach _id _assignop _num till _num $@6 _with . STEP STMT

    _id  shift, and go to state 138

    STEP  go to state 139


state 134

   38 CONTROL_STMT: _foreach _id _assignop _num till _id $@7 _with . STEP STMT

    _id  shift, and go to state 138

    STEP  go to state 140


state 135

   31 CONTROL_STMT: _if '(' BOOLEXPR ')' THENN $@2 STMT _else . $@3 STMT

    $default  reduce using rule 30 ($@3)

    $@3  go to state 141


state 136

   50 CASES: DEFAULT ':' $@11 . STMTLIST

    $default  reduce using rule 18 (STMTLIST)

    STMTLIST  go to state 142


state 137

   48 CASES: CASE _num ':' . $@9 STMTLIST BREAK ';' $@10 CASES

    $default  reduce using rule 46 ($@9)

    $@9  go to state 143


state 138

   51 STEP: _id . _assignop _id _addop _num
   52     | _id . _assignop _id _mulop _num

    _assignop  shift, and go to state 144


state 139

   36 CONTROL_STMT: _foreach _id _assignop _num till _num $@6 _with STEP . STMT

    _id       shift, and go to state 21
    _foreach  shift, and go to state 22
    out       shift, and go to state 24
    _if       shift, and go to state 25
    in        shift, and go to state 26
    DO        shift, and go to state 27
    SWITCHH   shift, and go to state 28
    _while    shift, and go to state 29
    '{'       shift, and go to state 30

    STMT             go to state 145
    OUT_STMT         go to state 32
    IN_STMT          go to state 33
    ASSIGNMENT_STMT  go to state 34
    CONTROL_STMT     go to state 35
    STMT_BLOCK       go to state 36
    SWITCH           go to state 37


state 140

   38 CONTROL_STMT: _foreach _id _assignop _num till _id $@7 _with STEP . STMT

    _id       shift, and go to state 21
    _foreach  shift, and go to state 22
    out       shift, and go to state 24
    _if       shift, and go to state 25
    in        shift, and go to state 26
    DO        shift, and go to state 27
    SWITCHH   shift, and go to state 28
    _while    shift, and go to state 29
    '{'       shift, and go to state 30

    STMT             go to state 146
    OUT_STMT         go to state 32
    IN_STMT          go to state 33
    ASSIGNMENT_STMT  go to state 34
    CONTROL_STMT     go to state 35
    STMT_BLOCK       go to state 36
    SWITCH           go to state 37


state 141

   31 CONTROL_STMT: _if '(' BOOLEXPR ')' THENN $@2 STMT _else $@3 . STMT

    _id       shift, and go to state 21
    _foreach  shift, and go to state 22
    out       shift, and go to state 24
    _if       shift, and go to state 25
    in        shift, and go to state 26
    DO        shift, and go to state 27
    SWITCHH   shift, and go to state 28
    _while    shift, and go to state 29
    '{'       shift, and go to state 30

    STMT             go to state 147
    OUT_STMT         go to state 32
    IN_STMT          go to state 33
    ASSIGNMENT_STMT  go to state 34
    CONTROL_STMT     go to state 35
    STMT_BLOCK       go to state 36
    SWITCH           go to state 37


state 142

   17 STMTLIST: STMTLIST . STMT
   50 CASES: DEFAULT ':' $@11 STMTLIST .

    _id       shift, and go to state 21
    _foreach  shift, and go to state 22
    out       shift, and go to state 24
    _if       shift, and go to state 25
    in        shift, and go to state 26
    DO        shift, and go to state 27
    SWITCHH   shift, and go to state 28
    _while    shift, and go to state 29
    '{'       shift, and go to state 30

    $default  reduce using rule 50 (CASES)

    STMT             go to state 31
    OUT_STMT         go to state 32
    IN_STMT          go to state 33
    ASSIGNMENT_STMT  go to state 34
    CONTROL_STMT     go to state 35
    STMT_BLOCK       go to state 36
    SWITCH           go to state 37


state 143

   48 CASES: CASE _num ':' $@9 . STMTLIST BREAK ';' $@10 CASES

    $default  reduce using rule 18 (STMTLIST)

    STMTLIST  go to state 148


state 144

   51 STEP: _id _assignop . _id _addop _num
   52     | _id _assignop . _id _mulop _num

    _id  shift, and go to state 149


state 145

   36 CONTROL_STMT: _foreach _id _assignop _num till _num $@6 _with STEP STMT .

    $default  reduce using rule 36 (CONTROL_STMT)


state 146

   38 CONTROL_STMT: _foreach _id _assignop _num till _id $@7 _with STEP STMT .

    $default  reduce using rule 38 (CONTROL_STMT)


state 147

   31 CONTROL_STMT: _if '(' BOOLEXPR ')' THENN $@2 STMT _else $@3 STMT .

    $default  reduce using rule 31 (CONTROL_STMT)


state 148

   17 STMTLIST: STMTLIST . STMT
   48 CASES: CASE _num ':' $@9 STMTLIST . BREAK ';' $@10 CASES

    _id       shift, and go to state 21
    _foreach  shift, and go to state 22
    out       shift, and go to state 24
    _if       shift, and go to state 25
    in        shift, and go to state 26
    DO        shift, and go to state 27
    BREAK     shift, and go to state 150
    SWITCHH   shift, and go to state 28
    _while    shift, and go to state 29
    '{'       shift, and go to state 30

    STMT             go to state 31
    OUT_STMT         go to state 32
    IN_STMT          go to state 33
    ASSIGNMENT_STMT  go to state 34
    CONTROL_STMT     go to state 35
    STMT_BLOCK       go to state 36
    SWITCH           go to state 37


state 149

   51 STEP: _id _assignop _id . _addop _num
   52     | _id _assignop _id . _mulop _num

    _addop  shift, and go to state 151
    _mulop  shift, and go to state 152


state 150

   48 CASES: CASE _num ':' $@9 STMTLIST BREAK . ';' $@10 CASES

    ';'  shift, and go to state 153


state 151

   51 STEP: _id _assignop _id _addop . _num

    _num  shift, and go to state 154


state 152

   52 STEP: _id _assignop _id _mulop . _num

    _num  shift, and go to state 155


state 153

   48 CASES: CASE _num ':' $@9 STMTLIST BREAK ';' . $@10 CASES

    $default  reduce using rule 47 ($@10)

    $@10  go to state 156


state 154

   51 STEP: _id _assignop _id _addop _num .

    $default  reduce using rule 51 (STEP)


state 155

   52 STEP: _id _assignop _id _mulop _num .

    $default  reduce using rule 52 (STEP)


state 156

   48 CASES: CASE _num ':' $@9 STMTLIST BREAK ';' $@10 . CASES

    DEFAULT  shift, and go to state 118
    CASE     shift, and go to state 119

    CASES  go to state 157


state 157

   48 CASES: CASE _num ':' $@9 STMTLIST BREAK ';' $@10 CASES .

    $default  reduce using rule 48 (CASES)
